# HashiCorp Vault Helm Chart Values
# Chart Version: 0.25.0
# Vault Version: 1.13.1

server:
  # Image configuration
  image:
    repository: hashicorp/vault
    tag: 1.13.1
    pullPolicy: IfNotPresent

  # Resource allocation
  resources:
    requests:
      memory: 256Mi
      cpu: 250m
    limits:
      memory: 512Mi
      cpu: 500m

  # High Availability configuration
  ha:
    enabled: true
    replicas: 3
    raft:
      enabled: true
      setNodeId: true
      config:
        retryJoin: true
        autopilot:
          enabled: true
          cleanupDeadServers: true
          lastContactThreshold: "10s"
          maxTrailingLogs: 250
          minQuorum: 3
          serverStabilizationTime: "10s"

  # Storage configuration using high-iops-ssd storage class
  storage:
    storageClass: high-iops-ssd
    size: 10Gi
    accessMode: ReadWriteOnce
    
  # Audit log storage configuration
  auditStorage:
    enabled: true
    storageClass: standard-ssd
    size: 5Gi
    retention: 30d

  # Service account for AWS KMS integration
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/vault-kms-unseal

  # Auto-unsealing configuration using AWS KMS
  seal:
    type: awskms
    config:
      region: us-west-2
      kms_key_id: VAULT_KMS_KEY_ID

  # Additional security configurations
  extraSecurityContexts:
    - runAsNonRoot: true
      runAsUser: 100
      fsGroup: 1000
      seccompProfile:
        type: RuntimeDefault

# UI configuration
ui:
  enabled: true
  serviceType: ClusterIP
  externalPort: 8200
  targetPort: 8200
  serviceNodePort: null
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: vault-issuer
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"

# Vault Agent Injector configuration
injector:
  enabled: true
  replicas: 2
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 256Mi
      cpu: 250m
  metrics:
    enabled: true
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "9102"

# TLS configuration using cert-manager
tls:
  enabled: true
  certManager:
    enabled: true
    issuerRef:
      name: vault-issuer
      kind: ClusterIssuer

# Monitoring configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
    interval: 30s
    labels:
      release: prometheus

# Global settings
global:
  tlsDisable: false
  openshift: false
  psp:
    enable: true
    annotations:
      seccomp.security.alpha.kubernetes.io/allowedProfileNames: runtime/default

# Network policies
networkPolicy:
  enabled: true
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
              - 169.254.0.0/16
              - 172.16.0.0/12
              - 192.168.0.0/16
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: app