# Grafana Helm Chart Values Configuration
# Version: 9.5.0
# Purpose: Production-grade Grafana deployment for web scraping platform monitoring

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []

# Main Grafana configuration
grafana:
  enabled: true
  image:
    repository: grafana/grafana
    tag: "9.5.0"
    pullPolicy: IfNotPresent

  # Deployment configuration
  replicas: 2
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"

  # Resource allocation
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

  # Persistence configuration
  persistence:
    enabled: true
    type: pvc
    size: 10Gi
    storageClassName: gp2
    accessModes:
      - ReadWriteOnce

  # Security settings
  securityContext:
    runAsUser: 472
    runAsGroup: 472
    fsGroup: 472

  # Admin credentials (should be overridden via secrets)
  adminUser: admin
  adminPassword: ""

  # Data sources configuration
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server.monitoring.svc.cluster.local:9090
          access: proxy
          isDefault: true
          editable: false
          jsonData:
            timeInterval: "30s"
            queryTimeout: "60s"
            httpMethod: POST
            exemplarTraceIdDestinations:
              - name: trace_id
                datasourceUid: jaeger

        - name: Jaeger
          type: jaeger
          url: http://jaeger-query.monitoring.svc.cluster.local:16686
          access: proxy
          editable: false
          jsonData:
            nodeGraph:
              enabled: true

  # Dashboards configuration
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: true
          editable: false
          options:
            path: /var/lib/grafana/dashboards

  # Pre-configured dashboards
  dashboards:
    default:
      platform-overview:
        json: |
          {
            "title": "Platform Overview",
            "uid": "platform-overview",
            "panels": [
              {
                "title": "Active Tasks",
                "type": "stat"
              },
              {
                "title": "Success Rate",
                "type": "gauge"
              },
              {
                "title": "Error Rate",
                "type": "graph"
              },
              {
                "title": "Resource Usage",
                "type": "graph"
              }
            ]
          }
      task-performance:
        json: |
          {
            "title": "Task Performance",
            "uid": "task-performance",
            "panels": [
              {
                "title": "Task Duration",
                "type": "graph"
              },
              {
                "title": "Pages Scraped",
                "type": "graph"
              },
              {
                "title": "Data Volume",
                "type": "graph"
              },
              {
                "title": "Processing Latency",
                "type": "heatmap"
              }
            ]
          }
      system-health:
        json: |
          {
            "title": "System Health",
            "uid": "system-health",
            "panels": [
              {
                "title": "CPU Usage",
                "type": "graph"
              },
              {
                "title": "Memory Usage",
                "type": "graph"
              },
              {
                "title": "Pod Status",
                "type": "table"
              },
              {
                "title": "API Latency",
                "type": "graph"
              }
            ]
          }

  # Service configuration
  service:
    type: ClusterIP
    port: 80
    targetPort: 3000
    annotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "3000"

  # Ingress configuration
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress.class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    hosts:
      - grafana.scraping-platform.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.scraping-platform.com

  # Network policy configuration
  networkPolicy:
    enabled: true
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                name: monitoring
          - podSelector:
              matchLabels:
                app: prometheus

  # Service account configuration
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/grafana-role
    automountServiceAccountToken: true

  # Alerting configuration
  alerting:
    enabled: true
    alertmanagers:
      - static_configs:
          - targets:
              - alertmanager.monitoring.svc.cluster.local:9093

  # SMTP configuration for alerts
  smtp:
    enabled: true
    host: smtp.company.com:587
    user: grafana@company.com
    passwordSecret:
      name: grafana-smtp
      key: password

  # Additional configuration
  grafana.ini:
    server:
      root_url: https://grafana.scraping-platform.com
    auth:
      disable_login_form: false
    security:
      allow_embedding: true
      cookie_secure: true
    users:
      allow_sign_up: false
    analytics:
      reporting_enabled: false
    unified_alerting:
      enabled: true