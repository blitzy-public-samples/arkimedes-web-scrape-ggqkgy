# Kibana Helm Chart Values Configuration
# Version: 8.0.0
# Purpose: Enterprise-grade Kibana deployment for log visualization and analysis

image:
  repository: docker.elastic.co/kibana/kibana
  tag: 8.0.0
  pullPolicy: IfNotPresent

replicas: 1

# Elasticsearch connection settings
elasticsearchHosts: http://elasticsearch-master:9200

# Kibana configuration settings
kibanaConfig:
  kibana.yml:
    server.name: scraping-platform-kibana
    server.host: "0.0.0.0"
    elasticsearch.hosts: ["http://elasticsearch-master:9200"]
    elasticsearch.requestTimeout: 30000
    monitoring.ui.container.elasticsearch.enabled: true
    xpack.security.enabled: true
    xpack.reporting.enabled: true
    xpack.monitoring.enabled: true

# Resource allocation
resources:
  requests:
    cpu: 500m
    memory: 1Gi
  limits:
    cpu: 1000m
    memory: 2Gi

# Security context configuration
securityContext:
  runAsUser: 1000
  fsGroup: 1000

podSecurityContext:
  runAsUser: 1000
  fsGroup: 1000

# Service configuration
service:
  type: ClusterIP
  port: 5601
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "5601"

# Ingress configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: kibana.scraping-platform.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: kibana-tls
      hosts:
        - kibana.scraping-platform.com

# Node placement configuration
nodeSelector:
  role: logging

# Pod scheduling tolerations
tolerations:
  - key: logging
    operator: Exists
    effect: NoSchedule

# High availability configuration
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - kibana
        topologyKey: kubernetes.io/hostname

# Environment variables for authentication
extraEnvs:
  - name: ELASTICSEARCH_USERNAME
    valueFrom:
      secretKeyRef:
        name: elasticsearch-credentials
        key: username
  - name: ELASTICSEARCH_PASSWORD
    valueFrom:
      secretKeyRef:
        name: elasticsearch-credentials
        key: password

# Health check configuration
readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 30
  timeoutSeconds: 10
  successThreshold: 1
  failureThreshold: 3
  httpGet:
    path: /api/status
    port: 5601
    scheme: HTTP

livenessProbe:
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 10
  failureThreshold: 3
  httpGet:
    path: /api/status
    port: 5601
    scheme: HTTP